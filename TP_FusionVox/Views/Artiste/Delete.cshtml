@model TP_FusionVox.Models.Artiste
@{
    ViewData["classeSuffixe"] = "Delete";
}

<main class="container">

    <!--intro hero-->
    <div class="row  text-center align-items-center ">

        <!--Tire hero-->
        <div class="col mb-5">
            <h1 class="h0">
                <span class="text-danger">SUPPRIMER :</span><br />
                @Model.Nom @(Model.EstVedette ? Html.Raw("<i class=\"fa-solid fa-star fa-lg\"></i>") : "")        
            </h1>
        </div>
    </div>
    <div class="container-fluid">

        <div class="row justify-content-center p1">
            
            <div class="col col-lg-10 col-xl-8">
                    <form asp-controller="Artiste" asp-action="DeletePost" method="post" class="text-start p1">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="@Model.Id" />
                    <div class="cardul text-bg-dark mb-3">
                        <div class="card-header h4 text-center">
                            Êtes-vous sûr de vouloir supprimer cet artiste ?
                        </div>
                        <div class="card-body">
                                <div class="col text-center my-4">

                                <img src="@AppConstants.ImagePathArtiste@(string.IsNullOrWhiteSpace(Model.ImageURL) ? AppConstants.ImageGenericArtiste : Model.ImageURL)" alt="@Model.Nom" class="card-img border-img-parents w-50">
                                </div>
                         
                            <!--tableau details-->
               
                            <div class="table-responsive-sm">
                                <table class="table table-dark table-borderless">
                                    <tbody>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.Id)</th>
                                            <td>@Html.DisplayFor(model => model.Id)</td>
                                        </tr>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.Nom)</th>
                                            <td>@Html.DisplayFor(model => model.Nom)</td>
                                        </tr>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.Pays)</th>
                                            <td>@Html.DisplayFor(model => model.Pays)</td>
                                        </tr>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.Agent)</th>
                                            <td>@Html.DisplayFor(model => model.Agent)</td>
                                        </tr>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.DebutCarrier)</th>
                                            <td>@(Model.DebutCarrier != null ? Model.DebutCarrier.Value.ToString("MMM yyyy") : "")</td>
                                        </tr>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.NbChansons)</th>
                                            <td>@Html.DisplayFor(model => model.NbChansons)</td>
                                        </tr>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.GenreMusical)</th>
                                            <td>@Html.DisplayFor(model => model.GenreMusical.Nom)</td>
                                        </tr>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.NbAbonnees)</th>
                                            <td>@Html.DisplayFor(model => model.NbAbonnees) </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <!--Biographie colapse-->
                            <p>
                                <button class="btn-reinitialiser" type="button" data-bs-toggle="collapse" data-bs-target="#biographie" aria-expanded="false" aria-controls="biographie">
                                    Biographie <i class="fa-solid fa-chevron-down"></i>
                                </button>
                            </p>
                            <div class="collapse" id="biographie">
                                <div class="cardul card-body">
                                    @Model.Biographie
                                </div>
                            </div>

                        </div>
                        <partial name="_DeleteBackButtonPartialle" model="Model" />
                </form>
            </div>
            
        </div>
    </div>
</main>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


